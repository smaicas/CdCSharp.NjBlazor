@using CdCSharp.NjBlazor.Features.Controls.Components.Meter
@using CdCSharp.NjBlazor.Features.Layout.Components.Spinner
@using CdCSharp.NjBlazor.Features.Markdown

<div class="nj-p-5">

    @if (Fragment == null)
    {
        <NjSpinner Variant="NjSpinnerVariant.Default" />
    }
    else
    {
        @Fragment
    }

</div>

<div class="nj-p-5">
    <h2>NjMeter</h2>
    <NjMeter MaxWidthPx="300" Low="25" High="50" Optimum="75" FormControl="true" Value="15"></NjMeter>
    <NjMeter MaxWidthPx="300" Low="25" High="50" Optimum="75" FormControl="true" Value="55"></NjMeter>
    <NjMeter MaxWidthPx="300" Low="25" High="50" Optimum="75" FormControl="true" Value="90"></NjMeter>

</div>

@code {
    RenderFragment? Fragment;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            HttpClient client = new HttpClient();
            string contentMd = await client.GetStringAsync("https://raw.githubusercontent.com/wiki/smaicas/CdCSharp.NjBlazor/Meter.md");

            Fragment = MarkdownToRenderFragmentParser.ParseText(contentMd);
            await InvokeAsync(StateHasChanged);
        }
    }
}
