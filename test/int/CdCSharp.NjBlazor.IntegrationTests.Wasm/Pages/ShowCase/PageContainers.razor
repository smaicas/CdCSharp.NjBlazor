@page "/containers"
@using CdCSharp.NjBlazor.Core
@using CdCSharp.NjBlazor.Features.Containers.Components
@using CdCSharp.NjBlazor.Features.Layout.Components.Grid
@using CdCSharp.NjBlazor.Features.Layout.Components.Stack
    @using CdCSharp.NjBlazor.Features.Layout.Components.Spinner
@using CdCSharp.NjBlazor.Features.Markdown

@inject IStringLocalizer<PageContainers> Loc

<div class="nj-p-5">

    @if (FragmentFitContent == null)
    {
        <NjSpinner Variant="NjSpinnerVariant.Default" />
    }
    else
    {
        @FragmentFitContent
    }

</div>

<h2>NjFitContent</h2>

<NjFitContent>@Loc["Content"]</NjFitContent>


<div class="nj-p-5">

    @if (FragmentInputControl == null)
    {
        <NjSpinner Variant="NjSpinnerVariant.Default" />
    }
    else
    {
        @FragmentInputControl
    }

</div>

<h2>NjInputControl</h2>

<style>
    .nj-input-control {
        border: 1px solid deeppink;
    }

    .nj-input-control-formcontrol {
        text-decoration: underline;
    }
</style>

<NjInputControl FormControl="false">@Loc["Here Input Control - FormControl = false"]</NjInputControl>
<NjInputControl FormControl="true">@Loc["Here Input Control - FormControl = true"]</NjInputControl>

<div class="nj-p-5">

    @if (FragmentShadowBox == null)
    {
        <NjSpinner Variant="NjSpinnerVariant.Default" />
    }
    else
    {
        @FragmentShadowBox
    }

</div>

<h2>NjShadowBox</h2>

<NjShadowBox>@Loc["Content"]</NjShadowBox>

<div class="nj-p-5">

    @if (FragmentStack == null)
    {
        <NjSpinner Variant="NjSpinnerVariant.Default" />
    }
    else
    {
        @FragmentStack
    }

</div>

<h2>Stack</h2>

<h3>Stack row</h3>

<NjStack Grow="1" Spacing="5" AlignItems="Core.AlignItemsMode.Center" Direction="Core.FlexDirectionMode.Row" Wrap="Core.FlexWrapMode.Wrap">
    <div>1</div>
    <div>2</div>
    <div>3</div>
</NjStack>

<h3>Stack column</h3>

<NjStack Grow="1" Spacing="5" AlignItems="Core.AlignItemsMode.Center" Direction="Core.FlexDirectionMode.Column" Wrap="Core.FlexWrapMode.Wrap">
    <div>1</div>
    <div>2</div>
    <div>3</div>
</NjStack>

<div class="nj-p-5">

    @if (FragmentGrid == null)
    {
        <NjSpinner Variant="NjSpinnerVariant.Default" />
    }
    else
    {
        @FragmentGrid
    }

</div>

<h2>Grid</h2>

<h3>TemplateColumnsMode.Fill</h3>
<NjGrid TemplateColumns="TemplateColumnsMode.Fill">
    <NjGridCell Row="1">
        1
    </NjGridCell>
    <NjGridCell Row="2">
        2
    </NjGridCell>
    <NjGridCell Row="3">
        3
    </NjGridCell>
</NjGrid>

<h3>TemplateColumnsMode.Fit</h3>
<NjGrid TemplateColumns="TemplateColumnsMode.Fit">
    <NjGridCell Row="1">
        1
    </NjGridCell>
    <NjGridCell Row="2">
        2
    </NjGridCell>
    <NjGridCell Row="3">
        3
    </NjGridCell>
</NjGrid>

<h3>TemplateColumnsSpecific</h3>
<NjGrid TemplateColumnsSpecific="20% 30% 50%">
    <NjGridCell>
        <span style="background: #555;">20%</span>
    </NjGridCell>
    <NjGridCell>
        <span style="background: #555;">30%</span>
    </NjGridCell>
    <NjGridCell>
        <span style="background: #555;">50%</span>
    </NjGridCell>
</NjGrid>
@code {
    RenderFragment? FragmentFitContent;
    RenderFragment? FragmentInputControl;
    RenderFragment? FragmentShadowBox;
    RenderFragment? FragmentStack;
    RenderFragment? FragmentGrid;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            HttpClient client = new HttpClient();
            string fitContentMd = await client.GetStringAsync("https://raw.githubusercontent.com/wiki/smaicas/CdCSharp.NjBlazor/Containers-FitContent.md");
            string inputControlMd = await client.GetStringAsync("https://raw.githubusercontent.com/wiki/smaicas/CdCSharp.NjBlazor/Containers-InputControl.md");
            string shadowBoxMd = await client.GetStringAsync("https://raw.githubusercontent.com/wiki/smaicas/CdCSharp.NjBlazor/Containers-ShadowBox.md");
            string stackMd = await client.GetStringAsync("https://raw.githubusercontent.com/wiki/smaicas/CdCSharp.NjBlazor/Containers-Stack.md");
            string gridMd = await client.GetStringAsync("https://raw.githubusercontent.com/wiki/smaicas/CdCSharp.NjBlazor/Containers-Grid.md");

            FragmentFitContent = MarkdownToRenderFragmentParser.ParseText(fitContentMd);
            FragmentInputControl = MarkdownToRenderFragmentParser.ParseText(inputControlMd);
            FragmentShadowBox = MarkdownToRenderFragmentParser.ParseText(shadowBoxMd);
            FragmentStack = MarkdownToRenderFragmentParser.ParseText(stackMd);
            FragmentGrid = MarkdownToRenderFragmentParser.ParseText(gridMd);
            await InvokeAsync(StateHasChanged);
        }
    }
}
