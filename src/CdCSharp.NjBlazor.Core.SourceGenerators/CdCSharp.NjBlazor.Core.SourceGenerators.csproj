<Project Sdk="Microsoft.NET.Sdk">

	<!--According to : https://github.com/dotnet/roslyn/issues/47087

	.NET Standard 2.1 can be used under the following conditions:

	The generator will work during builds with .NET tooling (e.g. dotnet build or dotnet msbuild), but will not work for builds with .NET Framework tooling (e.g. msbuild)
	The generator will not work for IDE scenarios, which includes builds within Visual Studio and all IntelliSense functionality
	The second limitation in particular seems sufficiently problematic to say that the scenario is not recommended.
	-->

	<PropertyGroup>

		<TargetFramework>netstandard2.0</TargetFramework>
		<LangVersion>latest</LangVersion>
		<EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
		<Nullable>enable</Nullable>

		<PackageId>CdCSharp.NjBlazor.Core.SourceGenerators</PackageId>
		<VersionPrefix>1.0.0</VersionPrefix>
		<Authors>Samuel Maícas (CdCSharp)</Authors>
		<Company>smaicas</Company>
		<LangVersion>Latest</LangVersion>
		<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
		<IsPackable>true</IsPackable>
		<Configurations>Debug;Release;Integration</Configurations>

		<IsRoslynAnalyzer>true</IsRoslynAnalyzer>

	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.12.0" PrivateAssets="all" />
		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.11.0" PrivateAssets="all" />
	</ItemGroup>

</Project>
