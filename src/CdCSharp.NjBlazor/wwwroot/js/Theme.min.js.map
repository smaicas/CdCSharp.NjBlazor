{"version":3,"file":"Theme.min.js","sources":["../../Types/Theme/ThemeJs.ts"],"sourcesContent":["export function Load(): void {\r\n    window['ThemeJs'] = new ThemeModule.ThemeClass();\r\n}\r\n\r\nmodule ThemeModule {\r\n    const storagePreferenceKey: string = 'nj-darkmode';\r\n\r\n    export class ThemeClass {\r\n\r\n        constructor() {\r\n        }\r\n\r\n        public async InitializeAsync()\r\n            : Promise<void> {\r\n\r\n            let localStorageIsDarkMode: boolean | null = await this.LocalStorageIsDarkMode();\r\n\r\n            if (localStorageIsDarkMode !== null) {\r\n                await this.SetDarkMode(localStorageIsDarkMode);\r\n                return;\r\n            }\r\n\r\n            let userPreferenceIsDarkMode: boolean | null = await this.UserPreferenceIsDarkMode();\r\n\r\n            if (userPreferenceIsDarkMode !== null) {\r\n                await this.SetDarkMode(userPreferenceIsDarkMode);\r\n                return;\r\n            }\r\n\r\n            await await this.SetDarkMode(false);\r\n        }\r\n\r\n        public async SetDarkMode(isDark: boolean): Promise<void> {\r\n            document.documentElement.classList.remove('dark');\r\n            document.documentElement.classList.remove('light');\r\n            document.documentElement.classList.add(isDark ? 'dark' : 'light');\r\n            localStorage.setItem(storagePreferenceKey, isDark.toString());\r\n        }\r\n\r\n        public async ToggleDarkMode(): Promise<boolean> {\r\n            let darkMode = !(await this.IsDarkMode());\r\n            this.SetDarkMode(darkMode);\r\n            return darkMode;\r\n        }\r\n\r\n        public async IsDarkMode(): Promise<boolean> {\r\n            let isDark = await this.LocalStorageIsDarkMode();\r\n            return await this.LocalStorageIsDarkMode();\r\n        }\r\n\r\n        private async LocalStorageIsDarkMode(): Promise<boolean | null> {\r\n            const localStoragePreference: string = localStorage.getItem(storagePreferenceKey);\r\n            if (!localStoragePreference) return null;\r\n            const isDark: boolean = localStoragePreference === 'true';\r\n            return isDark;\r\n        }\r\n        private async UserPreferenceIsDarkMode(): Promise<boolean | null> {\r\n            const userPrefersDark: boolean = window.matchMedia\r\n                && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n            return userPrefersDark;\r\n        }\r\n    }\r\n}\r\n\r\nLoad();"],"names":["ThemeModule","storagePreferenceKey","ThemeClass","constructor","InitializeAsync","localStorageIsDarkMode","this","LocalStorageIsDarkMode","SetDarkMode","userPreferenceIsDarkMode","UserPreferenceIsDarkMode","isDark","document","documentElement","classList","remove","add","localStorage","setItem","toString","ToggleDarkMode","darkMode","IsDarkMode","localStoragePreference","getItem","window","matchMedia","matches"],"mappings":"AAIA,IAAOA,EAAA,CAAAA,IACH,MAAMC,EAA+B,cAE9BD,EAAME,WAAN,MAEH,WAAAC,GACA,CAEA,qBAAaC,GAGL,IAAAC,QAA+CC,KAAKC,yBAExD,GAA+B,OAA3BF,EAEA,kBADMC,KAAKE,YAAYH,IAIvB,IAAAI,QAAiDH,KAAKI,2BAEzB,OAA7BD,cAKQH,KAAKE,aAAY,SAJnBF,KAAKE,YAAYC,EAK/B,CAEA,iBAAaD,CAAYG,GACZC,SAAAC,gBAAgBC,UAAUC,OAAO,QACjCH,SAAAC,gBAAgBC,UAAUC,OAAO,SAC1CH,SAASC,gBAAgBC,UAAUE,IAAIL,EAAS,OAAS,SACzDM,aAAaC,QAAQjB,EAAsBU,EAAOQ,WACtD,CAEA,oBAAaC,GACT,IAAIC,UAAmBf,KAAKgB,cAErB,OADPhB,KAAKE,YAAYa,GACVA,CACX,CAEA,gBAAaC,GAEF,aADYhB,KAAKC,+BACXD,KAAKC,wBACtB,CAEA,4BAAcA,GACJ,MAAAgB,EAAiCN,aAAaO,QAAQvB,GAC5D,IAAKsB,EAA+B,OAAA,KAE7B,MAD4C,SAA3BA,CAE5B,CACA,8BAAcb,GAGH,OAF0Be,OAAOC,YACjCD,OAAOC,WAAW,gCAAgCC,OAE7D,EAxDD,EAAA,CAAA3B,IAAAA,EAAA,CAAA,IAHHyB,OAAgB,QAAI,IAAIzB,EAAYE"}